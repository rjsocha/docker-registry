Listen 80
ServerRoot "/usr/local/apache2"
LoadModule mpm_event_module modules/mod_mpm_event.so
LoadModule authn_file_module modules/mod_authn_file.so
LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule authz_core_module modules/mod_authz_core.so
LoadModule access_compat_module modules/mod_access_compat.so
LoadModule auth_basic_module modules/mod_auth_basic.so
LoadModule log_config_module modules/mod_log_config.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule headers_module modules/mod_headers.so
LoadModule unixd_module modules/mod_unixd.so
LoadModule dir_module modules/mod_dir.so
LoadModule alias_module modules/mod_alias.so

User daemon
Group daemon
ServerAdmin registry@example.com
ServerTokens Prod
<Directory />
    AllowOverride none
    Require all denied
</Directory>
DocumentRoot "/homepage"
<Directory "/homepage">
    Options FollowSymLinks
    AllowOverride None
    Require all granted
</Directory>
DirectoryIndex index.html
<Files ".ht*">
    Require all denied
</Files>
LogLevel warn
LogFormat "%V %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" vcombined
ErrorLog /proc/self/fd/2
CustomLog /proc/self/fd/1 vcombined
RequestHeader unset Proxy early

<VirtualHost *:80>
  ServerName _

  #Header onsuccess set "Docker-Distribution-Api-Version" "registry/2.0"
  RequestHeader set X-Forwarded-Proto "https"

  ProxyRequests     off
  ProxyPreserveHost on

  ProxyPass        /v2 http://registry:5000/v2
  ProxyPassReverse /v2 http://registry:5000/v2

  <Location /v2>
    Order deny,allow
    Allow from all
    AuthName "[REGISTRY]"
    AuthType basic
    AuthUserFile "/auth/passwd"
    AuthGroupFile "/auth/group"

    Header always set "Docker-Distribution-Api-Version" "registry/2.0"

    # Pull
    <Limit GET HEAD>
      Require valid-user
    </Limit>

    # Push
    <Limit POST PUT DELETE PATCH>
      Require group push
    </Limit>
  </Location>
</VirtualHost>
